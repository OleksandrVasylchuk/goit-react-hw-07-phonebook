{"version":3,"sources":["redux/actions.js","redux/reduser.js","redux/store.js","services/service-api.js","redux/operations.js","redux/selector.js","Components/ContactForm/ContactForm.styled.js","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.styled.js","Components/ContactList/ContactList.jsx","Components/Filter/Filter.styled.js","Components/Filter/Filter.jsx","Components/Section/Section.styled.js","Components/Section/Section.jsx","App.jsx","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","filter","id","isLoading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","contacts","phonebookReducer","store","configureStore","reducer","devTools","process","addContact","contact","axios","post","deleteContact","delete","defaults","baseURL","getContacts","getFilter","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","Forma","styled","form","Input","input","Label","label","Button","button","span","ContactForm","useSelector","dispatch","useDispatch","useState","setName","number","setNumber","onSubmit","a","serviceAPI","data","operations","resetName","resetNumber","event","preventDefault","includeName","reduce","acc","includeNumber","alert","newContact","type","value","placeholder","onChange","currentTarget","pattern","maxLength","TextContacts","List","ul","Item","li","Btn","ContactList","onDeleteContact","then","catch","map","size","onClick","InputFilter","LabelFilter","Filter","actions","target","Container","div","Section","children","App","loadingContacts","useEffect","get","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abb47d14.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactsRequest = createAction(\n  \"contacts/fetchContactsRequest\"\n);\nexport const fetchContactsSuccess = createAction(\n  \"contacts/fetchContactsSuccess\"\n);\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from \"./actions\";\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, { payload }) => payload,\n  [fetchContactsRequest]: () => null,\n  [addContactError]: (_, { payload }) => payload,\n  [addContactRequest]: () => null,\n  [deleteContactError]: (_, { payload }) => payload,\n  [deleteContactRequest]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  isLoading,\n  error,\n});\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from \"@reduxjs/toolkit\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport phonebookReducer from \"./reduser\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst rootReducer = combineReducers({\n  contacts: phonebookReducer,\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"http://localhost:4040\";\n\nexport function fetchContacts() {\n  return axios.get(`/contacts`);\n}\n\nexport function addContact(contact) {\n  return axios.post(\"/contacts\", contact);\n}\n\nexport function deleteContact(id) {\n  return axios.delete(`/contacts/${id}`);\n}\n","import * as serviceAPI from \"../services/service-api\";\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from \"./actions\";\n\nexport const fetchContacts = () => async (dispatch) => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await serviceAPI.fetchContacts();\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\nexport const addContact = (name, number) => async (dispatch) => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await serviceAPI.addContact(contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\n\nexport const deleteContact = (id) => async (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  serviceAPI\n    .deleteContact(id)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const getLoading = (state) => state.contacts.loading;\nexport const getError = (state) => state.contacts.error;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import styled from \"@emotion/styled\";\n\nexport const Forma = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 0px;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  border-radius: 3px;\n  border: none;\n  outline: none;\n  font-size: 14px;\n  padding: 3px;\n`;\n\nexport const Label = styled.label`\n  display: inline-flex;\n  justify-content: space-between;\n  margin-top: 20px;\n  font-size: 18px;\n  font-weight: 400;\n`;\n\nexport const Button = styled.button`\n  width: max-content;\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 30px;\n  cursor: pointer;\n  padding: 10px 15px;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  color: rgb(29, 126, 0);\n  background-color: rgb(141, 190, 212);\n  box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.3);\n  transition: transform 0.25s cubic-bezier(0.77, 0, 0.175, 1);\n  &:hover {\n    background-color: rgb(177 117 250);\n    color: #fff;\n    transform: scale(1.05);\n    border: none;\n    outline: none;\n  }\n`;\n\nexport const Error = styled.span`\n  top: 100px;\n  bottom: 0px;\n  color: coral;\n  margin-bottom: 10px;\n  font-size: 10px;\n  font-weight: 400;\n`;\n","import React, {useState} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as operations from '../../redux/operations';\r\nimport { getContacts } from '../../redux/selector';\r\nimport { MdPerson } from \"react-icons/md\";\r\nimport { MdStayPrimaryPortrait } from \"react-icons/md\";\r\nimport { Forma, Input, Label, Button } from './ContactForm.styled'\r\n\r\n\r\n\r\n\r\nexport default function ContactForm() {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const onSubmit = (name, number) =>\r\n    dispatch(operations.addContact(name, number));\r\n\r\n  const newContact = () => {\r\n    const includeName = contacts.reduce(\r\n      (acc, contact) => [...acc, contact.name],\r\n      [],\r\n    );\r\n    const includeNumber = contacts.reduce(\r\n      (acc, contact) => [...acc, contact.number],\r\n      [],\r\n    );\r\n\r\n    if (name === '' || number === '') {\r\n      alert('Please enter all fields!');\r\n      return true;\r\n    }\r\n\r\n    if (includeName.includes(name)) {\r\n      alert(`${name} is already in contacts`);\r\n      return true;\r\n    } else if (includeNumber.includes(number)) {\r\n      alert(`${number} is already in contacts`);\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleChangeName = event => {\r\n    setName(event.currentTarget.value);\r\n  };\r\n\r\n  const handleChangeNumber = event => {\r\n    setNumber(event.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    resetName();\r\n    resetNumber();\r\n\r\n    if (newContact()) {\r\n      return;\r\n    }\r\n\r\n     onSubmit(name, number);\r\n  };\r\n\r\n  const resetName = () => {\r\n    setName('');\r\n  };\r\n  const resetNumber = () => {\r\n    setNumber('');\r\n  };\r\n\r\n  \r\n    return (\r\n      <Forma onSubmit={handleSubmit}>\r\n        <Label >\r\n          <MdPerson></MdPerson>\r\n          Name\r\n          <Input\r\n            \r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"Oleksandr Vasylchuk\"\r\n            onChange={handleChangeName}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            maxLength=\"33\"\r\n          />\r\n        </Label>\r\n\r\n        <Label >\r\n          <MdStayPrimaryPortrait></MdStayPrimaryPortrait>\r\n          Number\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            placeholder=\"000-00-00\"\r\n            onChange={handleChangeNumber}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            maxLength=\"20\"\r\n          />\r\n        </Label>\r\n        <Button  type=\"submit\">\r\n          Add contact\r\n        </Button>\r\n      </Forma>\r\n    );\r\n}\r\n\r\n","import styled from \"@emotion/styled\";\n\nexport const TextContacts = styled.span`\n  max-width: 225px;\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  font-size: 16px;\n  & svg {\n    margin-right: 10px;\n  }\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Btn = styled.button`\n  margin-left: 20px;\n  cursor: pointer;\n  padding: 5px 5px;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.3);\n  transition: transform 0.25s cubic-bezier(0.77, 0, 0.175, 1);\n\n  &:hover {\n    background-color: #7a1212;\n    color: #fff;\n    transform: scale(1.05);\n    border: none;\n    outline: none;\n  }\n`;\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/operations';\r\nimport { getVisibleContacts } from '../../redux/selector';\r\nimport { FiPhone } from 'react-icons/fi';\r\nimport { List, Item, Btn, TextContacts } from './ContactList.styled'\r\n\r\n\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id => dispatch(deleteContact(id));\r\n\r\n\r\n\r\n    return (\r\n      <List>\r\n        {contacts.map(({ name, number, id }) =>\r\n                \r\n          <Item key={id}>\r\n            <TextContacts>\r\n              <FiPhone size=\"15\" />\r\n              {name}: {number}\r\n            </TextContacts>\r\n            <Btn\r\n              type=\"button\"\r\n              onClick={() => onDeleteContact(id)}>\r\n              Delete\r\n            </Btn>\r\n          </Item>\r\n        )}\r\n\r\n      </List>\r\n    )\r\n  \r\n}","import styled from \"@emotion/styled\";\n\nexport const InputFilter = styled.input`\n  height: 25px;\n  border-radius: 3px;\n  margin-top: 10px;\n  border: none;\n  outline: none;\n  margin-bottom: 20px;\n \n  }\n  padding: 3px;\n`;\n\nexport const LabelFilter = styled.label`\n  font-style: italic;\n  color: rgb(245, 229, 139);\n  font-size: 18px;\n  font-weight: 600;\n  & svg {\n    margin-right: 10px;\n  }\n`;\n\nexport const Icon = styled.span``;\n","import { VscSearch } from \"react-icons/vsc\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/selector';\r\nimport * as actions from '../../redux/actions';\r\nimport { InputFilter, LabelFilter } from './Filter.styled'\r\n\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = event => dispatch(actions.changeFilter(event.target.value));\r\n\r\n\r\n  \r\n    return (\r\n      <LabelFilter>\r\n        <VscSearch></VscSearch>\r\n        Find contacts by name\r\n        <InputFilter\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n          placeholder=\"Rosie Simpson\"\r\n        />\r\n           \r\n            \r\n      </LabelFilter>\r\n    )\r\n  \r\n}\r\n ","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  max-width: 350px;\n  margin-top: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 15px 20px;\n  background-image: url(https://sdelatlending.ru/wp-content/themes/xmarkup/img/old-wall.png);\n  background-color: rgb(39, 39, 110);\n  border: 2mm ridge rgba(170, 50, 220, 0.6);\n  box-shadow: 0 5px 5px rgba(0, 0, 0, 0.55);\n  border-radius: 15px;\n`;\n","import PropTypes from 'prop-types'\r\nimport {Container} from './Section.styled'\r\n\r\nexport default function Section({ children }) {\r\n    return <Container>{ children}</Container>\r\n\r\n}\r\n\r\nSection.propTypes = {\r\n    children: PropTypes.node.isRequired\r\n}","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport Section from \"./Components/Section/Section\";\nimport { fetchContacts } from './redux/operations';\nimport { getLoading } from './redux/selector';\n\nexport default function App() {\n  const loadingContacts = useSelector(getLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n   return (\n      <>\n       <Section>\n        <h1>Phonebook</h1>\n        <ContactForm/>\n\n         {loadingContacts && <p>Loading...</p>}\n        <h2>Contacts</h2>\n         <Filter />\n         \n        <ContactList/>\n      </Section>\n      </>\n    );\n}\n\n\n// function useLocalStorage(key, defaultValue) {\n//   const [state, setState] = useState(() => {\n//     return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n//   });\n\n//   useEffect(() => {\n//     window.localStorage.setItem(key, JSON.stringify(state));\n//   }, [key, state]);\n\n//   return [state, setState];\n// }\n\n\n// export default function App() {\n \n \n//   const [contacts, setContacts] = useLocalStorage('contacts', [\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//   ]);\n\n//   const [filter, setFilter] = useState('');\n\n//   const addContact = (name, number) => {\n//     const item = {\n//       id: uuid(),\n//       name,\n//       number,\n//     };\n\n//     const includeName = contacts.reduce(\n//       (acc, contact) => [...acc, contact.name],\n//       [],\n//     );\n//     const includeNumber = contacts.reduce(\n//       (acc, contact) => [...acc, contact.number],\n//       [],\n//     );\n\n//     if (name === '' || number === '') {\n//       alert('Please enter all fields!');\n//       return;\n//     }\n\n//     if (includeName.includes(name)) {\n//       alert(`${name} is already in contacts`);\n//       return;\n//     } else if (includeNumber.includes(number)) {\n//       alert(`${number} is already in contacts`);\n//     } else {\n//       setContacts(contacts => [item, ...contacts]);\n//     }\n//   };\n\n//   const getVisibleContacts = () => {\n//     const normalizedFilter = filter.toLowerCase();\n\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normalizedFilter),\n//     );\n//   };\n\n//   const deleteContact = contactId => {\n//     setContacts(prevState =>\n//       prevState.filter(contact => contact.id !== contactId),\n//     );\n//   };\n\n//   const changeFilter = event => {\n//     setFilter(event.currentTarget.value);\n//   };  \n  \n// }\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}